#!/bin/bash

function show_help
{
	cat << EOF
Funky non-autotool config script for MLT.

	Options are:

	--help                  - this information
	--prefix=directory      - install prefix for path (default: $prefix)
EOF

	for i in src/modules/*
	do
		[ -d $i ] && [ "`basename $i`" != "CVS" ] && echo "	--disable-`basename $i`"
	done

	echo
}

function build_config
{
	(
		echo version=$version
		echo prefix=$prefix
		echo bindir=$prefix/bin
	) > config.mak

	echo "#!/bin/sh" > mlt-config
	sed 's/^/export /' < config.mak >> mlt-config
	cat < mlt-config-template >> mlt-config

	echo -n > packages.dat
}

function build_pkgconfig
{
	for i in framework valerie miracle
	do
		echo "prefix=$prefix" >mlt-$i.pc
		echo "exec_prefix=$prefix" >>mlt-$i.pc
		echo "libdir=$prefix/lib" >>mlt-$i.pc
		echo "includedir=$prefix/include" >>mlt-$i.pc
		echo "version=$version" >>mlt-$i.pc
		echo "cflags=`grep ^$i packages.dat | cut -f 2`" >>mlt-$i.pc
		echo "libs=`grep ^$i packages.dat | cut -f 3`" >>mlt-$i.pc
		cat mlt-$i.pc.in >>mlt-$i.pc
	done
}

# Debug mode
set +x

# Define build directory for scripts called
export build_dir=`dirname $0`
export prefix=/usr/local
export help=0
export version=0.1.0

# Iterate through arguments
for i in $*
do
	case $i in
		--help )		help=1 ;;
		--prefix=* )	prefix="${i#--prefix=}" ;;
	esac
done

# Show help if requested
[ $help = 1 ] && show_help || build_config

# Iterate through each of the components
for i in framework modules inigo valerie miracle humperdink
do
	if [ -x src/$i/configure ]
	then
		echo "Configuring `basename $i`:"
		pushd src/$i > /dev/null
		./configure $@
		[ $? != 0 ] && exit 1
		popd > /dev/null
	fi
done

# Build the pkg-config files
build_pkgconfig
